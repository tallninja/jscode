{"version":3,"file":"static/js/63116.605ad913.chunk.js","mappings":"uFAGC,SAAUA,GAGV,IAiBIC,EAAiB,CACpB,KACA,WACA,cACA,aACA,KACA,WAOGC,EA9Be,CAClB,MACA,MACA,MACA,MACA,QACA,SACA,SACA,QACA,eACA,UACA,OACA,YAkB2BC,OAAOF,EAFd,CAAC,WAItBD,EAAMI,UAAUC,OAAS,CACxB,QAAW,CACVC,QAAS,gBACTC,YAAY,GAEb,eAAgB,CAEfD,QAAS,IAAIE,OAAO,OAASP,EAAeQ,KAAK,KAAO,qBACxDF,YAAY,EACZG,OAAQ,CACP,YAAa,CACZJ,QAAS,YACTK,MAAO,aAER,YAAe,UAGjB,iBAAkB,CACjBL,QAAS,aACTI,OAAQ,CACP,YAAa,CACZJ,QAAS,gCACTK,MAAO,aAER,cAAe,CACdL,QAAS,qCACTM,QAAQ,EACRD,MAAO,cAER,YAAe,sBAGjB,gBAAiB,CAChB,CACCL,QAAS,eACTI,OAAQ,CACP,YAAe,UACf,iBAAkB,CACjBJ,QAAS,+BACTK,MAAO,YAIV,CACCL,QAAS,mBACTC,YAAY,EACZG,OAAQ,CACP,iBAAkB,CACjBJ,QAAS,+BACTK,MAAO,aAKX,QAAW,IAAIH,OAAO,SAAWN,EAASO,KAAK,KAAO,OAAQ,KAC9D,SAAY,wBACZ,OAAU,oFACV,SAAY,mDACZ,YAAe,iBA7FhB,CA+FCT","sources":["../node_modules/prismjs/components/prism-promql.js"],"sourcesContent":["// Thanks to: https://github.com/prometheus-community/monaco-promql/blob/master/src/promql/promql.ts\n// As well as: https://kausal.co/blog/slate-prism-add-new-syntax-promql/\n\n(function (Prism) {\n\t// PromQL Aggregation Operators\n\t// (https://prometheus.io/docs/prometheus/latest/querying/operators/#aggregation-operators)\n\tvar aggregations = [\n\t\t'sum',\n\t\t'min',\n\t\t'max',\n\t\t'avg',\n\t\t'group',\n\t\t'stddev',\n\t\t'stdvar',\n\t\t'count',\n\t\t'count_values',\n\t\t'bottomk',\n\t\t'topk',\n\t\t'quantile'\n\t];\n\n\t// PromQL vector matching + the by and without clauses\n\t// (https://prometheus.io/docs/prometheus/latest/querying/operators/#vector-matching)\n\tvar vectorMatching = [\n\t\t'on',\n\t\t'ignoring',\n\t\t'group_right',\n\t\t'group_left',\n\t\t'by',\n\t\t'without',\n\t];\n\n\t// PromQL offset modifier\n\t// (https://prometheus.io/docs/prometheus/latest/querying/basics/#offset-modifier)\n\tvar offsetModifier = ['offset'];\n\n\tvar keywords = aggregations.concat(vectorMatching, offsetModifier);\n\n\tPrism.languages.promql = {\n\t\t'comment': {\n\t\t\tpattern: /(^[ \\t]*)#.*/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'vector-match': {\n\t\t\t// Match the comma-separated label lists inside vector matching:\n\t\t\tpattern: new RegExp('((?:' + vectorMatching.join('|') + ')\\\\s*)\\\\([^)]*\\\\)'),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'label-key': {\n\t\t\t\t\tpattern: /\\b[^,]*\\b/,\n\t\t\t\t\talias: 'attr-name',\n\t\t\t\t},\n\t\t\t\t'punctuation': /[(),]/\n\t\t\t},\n\t\t},\n\t\t'context-labels': {\n\t\t\tpattern: /\\{[^{}]*\\}/,\n\t\t\tinside: {\n\t\t\t\t'label-key': {\n\t\t\t\t\tpattern: /\\b[a-z_]\\w*(?=\\s*(?:=|![=~]))/,\n\t\t\t\t\talias: 'attr-name',\n\t\t\t\t},\n\t\t\t\t'label-value': {\n\t\t\t\t\tpattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n\t\t\t\t\tgreedy: true,\n\t\t\t\t\talias: 'attr-value',\n\t\t\t\t},\n\t\t\t\t'punctuation': /\\{|\\}|=~?|![=~]|,/,\n\t\t\t},\n\t\t},\n\t\t'context-range': [\n\t\t\t{\n\t\t\t\tpattern: /\\[[\\w\\s:]+\\]/, // [1m]\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\[|\\]|:/,\n\t\t\t\t\t'range-duration': {\n\t\t\t\t\t\tpattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n\t\t\t\t\t\talias: 'number',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: /(\\boffset\\s+)\\w+/, // offset 1m\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'range-duration': {\n\t\t\t\t\t\tpattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n\t\t\t\t\t\talias: 'number',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t'keyword': new RegExp('\\\\b(?:' + keywords.join('|') + ')\\\\b', 'i'),\n\t\t'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n\t\t'number': /[-+]?(?:(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[-+]?\\d+)?\\b|\\b(?:0x[0-9a-f]+|nan|inf)\\b)/i,\n\t\t'operator': /[\\^*/%+-]|==|!=|<=|<|>=|>|\\b(?:and|unless|or)\\b/i,\n\t\t'punctuation': /[{};()`,.[\\]]/,\n\t};\n}(Prism));\n"],"names":["Prism","vectorMatching","keywords","concat","languages","promql","pattern","lookbehind","RegExp","join","inside","alias","greedy"],"sourceRoot":""}
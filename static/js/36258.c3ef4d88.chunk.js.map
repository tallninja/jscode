{"version":3,"file":"static/js/36258.c3ef4d88.chunk.js","mappings":"sFAAAA,MAAMC,UAAUC,OAASF,MAAMC,UAAUE,OAAO,SAAU,CACzD,mBAAoB,CAGnBC,QAAS,qCACTC,YAAY,KAIdL,MAAMC,UAAUK,aAAa,SAAU,SAAU,CAChD,KAAQ,CACPF,QAAS,YACTG,QAAQ,EACRC,MAAO,aAITR,MAAMC,UAAUQ,IAAMT,MAAMC,UAAUC","sources":["../node_modules/prismjs/components/prism-racket.js"],"sourcesContent":["Prism.languages.racket = Prism.languages.extend('scheme', {\n\t'lambda-parameter': {\n\t\t// the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\n\t\t// this will just prevent false positives of the `function` pattern\n\t\tpattern: /([(\\[]lambda\\s+[(\\[])[^()\\[\\]'\\s]+/,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.insertBefore('racket', 'string', {\n\t'lang': {\n\t\tpattern: /^#lang.+/m,\n\t\tgreedy: true,\n\t\talias: 'keyword'\n\t}\n});\n\nPrism.languages.rkt = Prism.languages.racket;\n"],"names":["Prism","languages","racket","extend","pattern","lookbehind","insertBefore","greedy","alias","rkt"],"sourceRoot":""}